import Head from 'next/head'
import { Mochiy_Pop_One } from 'next/font/google'
import * as S from "../styles/Index_style.js"
import { use, useEffect, useState } from 'react'


const Mochiy = Mochiy_Pop_One({
  subsets: ['latin'],
  weight: ['400'],

})

// let corX = ""
// let corO = ""

export default function Home() {
  const [playerTurn, setPlayerTurn] = useState("X")
  const [colorX, setColorX] = useState("")
  const [colorO, setColorO] = useState("")
  const [vencedor, setVencedor] = useState(null)

  return (
    <>
      <S.GlobalStyle />
      <Head>
        <title>JOGO DA V√âIA</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <S.MainBox $win={vencedor}>

        <S.MainFirstBox>
          
          <S.PlayerTitle className={Mochiy.className}>Player: <S.PlayerSimbol $iscoloro={colorO} $iscolorx={colorX} value={playerTurn}>{playerTurn}</S.PlayerSimbol></S.PlayerTitle>
          <S.ChangeColor className={Mochiy.className}
            onClick={() => {
              setColorO(colorO === "" ? "blue" : "")
              setColorX(colorX === "" ? "#c1121f" : "")
            }}
          >Mudar Cor</S.ChangeColor>

        </S.MainFirstBox>
        
        {vencedor && <S.WinAlert className={Mochiy.className}>
        Parab√©ns Jogador(a) {playerTurn === "X"? "O" : "X"}!!!üèÜüéâ Clique no bot√£o abaixo para jogar novamente!!!
        </S.WinAlert>}

        <S.GameBox>

          <S.LineSquare>

            <S.Square $isborderright="0.75vw solid" $isborderbottom="0.75vw solid">
              <Moves setPlayerTurn={setPlayerTurn} colorO={colorO} colorX={colorX} buttonId={1} setVencedor={setVencedor} />
            </S.Square>

            <S.Square $isborderbottom="0.75vw solid" $isborderright="0.75vw solid">
              <Moves setPlayerTurn={setPlayerTurn} colorO={colorO} colorX={colorX} buttonId={2} setVencedor={setVencedor} />
            </S.Square>

            <S.Square $isborderbottom="0.75vw solid">
              <Moves setPlayerTurn={setPlayerTurn} colorO={colorO} colorX={colorX} buttonId={3} setVencedor={setVencedor} />
            </S.Square>

          </S.LineSquare>

          <S.LineSquare>

            <S.Square $isborderbottom="0.75vw solid" $isborderright="0.75vw solid">
              <Moves setPlayerTurn={setPlayerTurn} colorO={colorO} colorX={colorX} buttonId={4} setVencedor={setVencedor} />
            </S.Square>

            <S.Square $isborderbottom="0.75vw solid" $isborderright="0.75vw solid">
              <Moves setPlayerTurn={setPlayerTurn} colorO={colorO} colorX={colorX} buttonId={5} setVencedor={setVencedor} />
            </S.Square>

            <S.Square $isborderbottom="0.75vw solid">
              <Moves setPlayerTurn={setPlayerTurn} colorO={colorO} colorX={colorX} buttonId={6} setVencedor={setVencedor} />
            </S.Square>

          </S.LineSquare>

          <S.LineSquare>

            <S.Square $isborderright="0.75vw solid">
              <Moves setPlayerTurn={setPlayerTurn} colorO={colorO} colorX={colorX} buttonId={7} setVencedor={setVencedor} />
            </S.Square>

            <S.Square $isborderright="0.75vw solid">
              <Moves setPlayerTurn={setPlayerTurn} colorO={colorO} colorX={colorX} buttonId={8} setVencedor={setVencedor} />
            </S.Square>

            <S.Square>
              <Moves setPlayerTurn={setPlayerTurn} colorO={colorO} colorX={colorX} buttonId={9} setVencedor={setVencedor} />
            </S.Square>

          </S.LineSquare>


        </S.GameBox>
        { vencedor && <S.ButtonReload onClick={() => { location.reload() }} className={Mochiy.className}>
          Jogar Novamente
        </S.ButtonReload>}
      </S.MainBox>
    </>
  )
}
// guarda qual foi o √∫ltimo movimento, essa vari√°vel √© a chave para a transi√ß√£o do "X" para "O" e vice versa.
let lastMove = ""

let Xmoves = {
  X1: "",
  X2: "",
  X3: "",
  X4: "",
  X5: "",
  X6: "",
  X7: "",
  X8: "",
  X9: ""
}

let Omoves = {
  O1: "",
  O2: "",
  O3: "",
  O4: "",
  O5: "",
  O6: "",
  O7: "",
  O8: "",
  O9: ""
}

let XWin
let OWin
let aviso = ""

function Moves({ setPlayerTurn, colorO, colorX, buttonId, setVencedor }) {
  const [player, setPlayer] = useState("")


  const HandlePlayer = () => {
    if (lastMove === "") {
      setPlayer("X")
      lastMove = "X"
      setPlayerTurn("O")
    } else if (lastMove === "X") {
      setPlayer("O")
      lastMove = "O"
      setPlayerTurn("X")
    } else if (lastMove === "O") {
      setPlayer("X")
      lastMove = "X"
      setPlayerTurn("O")
    }
  }

  const MovesToWin = (item) => {

    if (item.target.value === "X" && item.target.id === "1") {
      Xmoves.X1 = true
      console.log("foi X1")
    } else if (item.target.value === "X" && item.target.id === "2") {
      Xmoves.X2 = true
      console.log("foi X2")
    } else if (item.target.value === "X" && item.target.id === "3") {
      Xmoves.X3 = true
      console.log("foi X3")
    } else if (item.target.value === "X" && item.target.id === "4") {
      Xmoves.X4 = true
      console.log("foi X4")
    } else if (item.target.value === "X" && item.target.id === "5") {
      Xmoves.X5 = true
      console.log("foi X5")
    } else if (item.target.value === "X" && item.target.id === "6") {
      Xmoves.X6 = true
      console.log("foi X6")
    } else if (item.target.value === "X" && item.target.id === "7") {
      Xmoves.X7 = true
      console.log("foi X7")
    } else if (item.target.value === "X" && item.target.id === "8") {
      Xmoves.X8 = true
      console.log("foi X8")
    } else if (item.target.value === "X" && item.target.id === "9") {
      Xmoves.X9 = true
      console.log("foi X9")
    }

    if (item.target.value === "O" && item.target.id === "1") {
      Omoves.O1 = true
      console.log("foi O1")
    } else if (item.target.value === "O" && item.target.id === "2") {
      Omoves.O2 = true
      console.log("foi 02")
    } else if (item.target.value === "O" && item.target.id === "3") {
      Omoves.O3 = true
      console.log("foi 03")
    } else if (item.target.value === "O" && item.target.id === "4") {
      Omoves.O4 = true
      console.log("foi 04")
    } else if (item.target.value === "O" && item.target.id === "5") {
      Omoves.O5 = true
      console.log("foi 05")
    } else if (item.target.value === "O" && item.target.id === "6") {
      Omoves.O6 = true
      console.log("foi 06")
    } else if (item.target.value === "O" && item.target.id === "7") {
      Omoves.O7 = true
      console.log("foi 07")
    } else if (item.target.value === "O" && item.target.id === "8") {
      Omoves.O8 = true
      console.log("foi 08")
    } else if (item.target.value === "O" && item.target.id === "9") {
      Omoves.O9 = true
      console.log("foi 09")
    }

    if ((Xmoves.X1 && Xmoves.X2 && Xmoves.X3) || (Xmoves.X4 && Xmoves.X5 && Xmoves.X6) || (Xmoves.X7 && Xmoves.X8 && Xmoves.X9) || (Xmoves.X1 && Xmoves.X4 && Xmoves.X7) || (Xmoves.X2 && Xmoves.X5 && Xmoves.X8) || (Xmoves.X3 && Xmoves.X6 && Xmoves.X9) || (Xmoves.X1 && Xmoves.X5 && Xmoves.X9) || (Xmoves.X3 && Xmoves.X5 && Xmoves.X7)) {
      XWin = true;
      setVencedor(true)
    }
    if ((Omoves.O1 && Omoves.O2 && Omoves.O3) || (Omoves.O4 && Omoves.O5 && Omoves.O6) || (Omoves.O7 && Omoves.O8 && Omoves.O9) || (Omoves.O1 && Omoves.O4 && Omoves.O7) || (Omoves.O2 && Omoves.O5 && Omoves.O8) || (Omoves.O3 && Omoves.O6 && Omoves.O9) || (Omoves.O1 && Omoves.O5 && Omoves.O9) || (Omoves.O3 && Omoves.O5 && Omoves.O7)) {
      OWin = true;
      setVencedor(true)
    }

    // if (XWin == true && aviso == "") {
    //   alert("Parab√©ns ao Jogador(a) X!!! Clique no bot√£o abaixo jogar novamente!!!")
    //   aviso = true
    // } else if (OWin == true && aviso === "") {
    //   alert("Parab√©ns ao Jogador(a) O!!! Clique abaixo para jogar novamente!!!")
    //   aviso = true
    // }

  }

  return (
    <S.Button value={player}
      id={buttonId}
      className={Mochiy.className}
      disabled={OWin || XWin ? true:false }
      onClick={(item) => {
        HandlePlayer()
        setTimeout(() => {
          MovesToWin(item)
        }, 500)
      }}
      $iscoloro={colorO}
      $iscolorx={colorX}>

      {player}

    </S.Button>
  )
}