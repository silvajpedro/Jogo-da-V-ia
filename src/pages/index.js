import Head from 'next/head'
import { Mochiy_Pop_One } from '@next/font/google'
import * as S from "../styles/Index_style.js"
import {useState } from 'react'


const Mochiy = Mochiy_Pop_One({
  subsets: ['latin'],
  weight: ['400'],

})

// let corX = ""
// let corO = ""

export default function Home() {
  const [playerTurn, setPlayerTurn] = useState("X")
  const [colorX,setColorX] = useState("")
  const [colorO,setColorO] = useState("")
  return (
    <>
      <S.GlobalStyle />
      <Head>
        <title>JOGO DA VÃ‰IA</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <S.MainBox $win={countMoves}>

        <S.MainFirstBox>

          <S.PlayerTitle className={Mochiy.className}>Player: <S.PlayerSimbol $iscoloro={colorO} $iscolorx={colorX} value={playerTurn}>{playerTurn}</S.PlayerSimbol></S.PlayerTitle>
          <S.ChangeColor className={Mochiy.className}
            onClick={() => {
             setColorO(colorO === "" ? "blue":"")
             setColorX(colorX === ""? "#c1121f":"")
            }}
          >Mudar Cor</S.ChangeColor>

        </S.MainFirstBox>

        <S.GameBox>

          <S.LineSquare>

            <S.Square $isborderright="14px solid" $isborderbottom="14px solid">
              <Moves setPlayerTurn={setPlayerTurn} colorO={colorO} colorX={colorX}  />
            </S.Square>

            <S.Square $isborderbottom="14px solid" $isborderright="14px solid">
              <Moves setPlayerTurn={setPlayerTurn} colorO={colorO} colorX={colorX}   />
            </S.Square>

            <S.Square $isborderbottom="14px solid">
              <Moves setPlayerTurn={setPlayerTurn}  colorO={colorO} colorX={colorX}  />
            </S.Square>

          </S.LineSquare>

          <S.LineSquare>

            <S.Square $isborderbottom="14px solid" $isborderright="14px solid">
              <Moves setPlayerTurn={setPlayerTurn} colorO={colorO} colorX={colorX} />
            </S.Square>

            <S.Square $isborderbottom="14px solid" $isborderright="14px solid">
              <Moves setPlayerTurn={setPlayerTurn} colorO={colorO} colorX={colorX} />
            </S.Square>

            <S.Square $isborderbottom="14px solid">
              <Moves setPlayerTurn={setPlayerTurn} colorO={colorO} colorX={colorX} />
            </S.Square>

          </S.LineSquare>

          <S.LineSquare>

            <S.Square $isborderright="14px solid">
              <Moves setPlayerTurn={setPlayerTurn} colorO={colorO} colorX={colorX} />
            </S.Square>

            <S.Square $isborderright="14px solid">
              <Moves setPlayerTurn={setPlayerTurn} colorO={colorO} colorX={colorX} />
            </S.Square>

            <S.Square>
              <Moves setPlayerTurn={setPlayerTurn} colorO={colorO} colorX={colorX} />
            </S.Square>

          </S.LineSquare>


        </S.GameBox>
        {countMoves === 9 && <S.ButtonReload onClick={() => location.reload()} className={Mochiy.className}>
          Jogar Novamente
        </S.ButtonReload>}
      </S.MainBox>
    </>
  )
}

let countMoves = 0
let lastMove = ""

function Moves({ setPlayerTurn, colorO, colorX }) {
  const [player, setPlayer] = useState("")

  const HandlePlayer = () => {

    if (lastMove === "") {
      setPlayer("X")
      lastMove = "X"
      setPlayerTurn("O")
      countMoves++
    } else if (lastMove === "X") {
      setPlayer("O")
      lastMove = "O"
      setPlayerTurn("X")
      countMoves++
    } else if (lastMove === "O") {
      setPlayer("X")
      lastMove = "X"
      setPlayerTurn("O")
      countMoves++
    }
  }

  return (
    <S.Button value={player}

      className={Mochiy.className}
      disabled={player === "O" || player === "X" ? true : false}
      onClick={() => { HandlePlayer() }}
      $iscoloro={colorO}
      $iscolorx={colorX}
    >

      {player}

    </S.Button>
  )
}